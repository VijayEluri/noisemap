<?xml version="1.0" encoding="UTF-8"?>
<project name="noisemap" default="default" basedir=".">
    <description>
        For locally executing the class WebStart, modify the Web Start of project properties
        For checking if the code is in sync with the online jar file, choose "clean and build project" from netbeans    
    </description>
    <import file="nbproject/build-impl.xml"/>
    <!-- Jsyn is removed from master-application.jnlp as we embedded it in the same jar in order to sign it -->
    <target name="-pre-jar">
        <unzip src="lib/jsyn-beta-16.4.4.jar" dest="build/classes">
            <patternset>
                <include name="**/*.class"/>
                <exclude name="META-INF*"/>
            </patternset>
        </unzip>    
    </target>
    
    <target name="generate-html-preview"> 
        <!-- For internal use: a clean build updates the website -->
        <copy todir="../../Dropbox/courses/software/site">
            <fileset file="dist/noisemap.jar"/>                         <!-- signed version -->
            <fileset file="dist/launch.jnlp"/>                      <!-- generated from master-application.jnlp-->
            <fileset file="android/x.apk"/>
        </copy>
        <echo message="Copied dist folder files to site folder. Dropbox syncs it with my workstation at craft where WinSCP syncs it with craftsrv5. This way i can update the site from my PC and from shiftedit.net/home But sometimes WinSCP needs to be turned off and dropbox to be restarted. "/>
        
        <get src="http://craftsrv5.epfl.ch/projects/noisemap/noisemap.jar" dest="noisemap.jar" verbose="true"/>
        <checksum file="noisemap.jar" algorithm="SHA-512"/>     <!-- generates noisemap.jar.SHA-512 -->
        <copy file="noisemap.jar.SHA-512" todir="dist"/>
        <condition property="isChecksumEqual">
          <checksum algorithm="SHA-512" file="dist/noisemap.jar"/>
        </condition>
        <antcall target="mayecho"/>
        <antcall target="mayecho2"/>
    </target>
    <target name="mayecho" if="isChecksumEqual">
      <echo message="Yes!"/>
    </target>
    <target name="mayecho2" unless="isChecksumEqual">
      <echo message="No!"/>
    </target>
    
    <!-- <condition property="isChecksumEqual" value="true">
            <filesmatch file1="noisemap.jar" file2="dist/noisemap.jar"/> 
        </condition> -->
    
    <!--
      -pre-init:                 called before initialization of project properties
      -post-init:                called after initialization of project properties
      -pre-compile:              called before javac compilation
      -post-compile:             called after javac compilation
      -pre-compile-single:       called before javac compilation of single file
      -post-compile-single:      called after javac compilation of single file
      -pre-compile-test:         called before javac compilation of JUnit tests
      -post-compile-test:        called after javac compilation of JUnit tests
      -pre-compile-test-single:  called before javac compilation of single JUnit test
      -post-compile-test-single: called after javac compilation of single JUunit test
      -pre-jar:                  called before JAR building
      -post-jar:                 called after JAR building
      -post-clean:               called after cleaning build products
    (Targets beginning with '-' are not intended to be called on their own.)
    For list of available properties check the imported 
    nbproject/build-impl.xml file. 
    Another way to customize the build is by overriding existing main targets.
    The targets of interest are: 
      -init-macrodef-javac:     defines macro for javac compilation
      -init-macrodef-junit:     defines macro for junit execution
      -init-macrodef-debug:     defines macro for class debugging
      -init-macrodef-java:      defines macro for class execution
      -do-jar-with-manifest:    JAR building (if you are using a manifest)
      -do-jar-without-manifest: JAR building (if you are not using a manifest)
      run:                      execution of project 
      -javadoc-build:           Javadoc generation
      test-report:              JUnit report generation
    -->
</project>
